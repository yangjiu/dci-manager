package com.jdsu.drivetest.diag;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;

/**
 * This holds registration information about the client. This<br>
 * struct is passed betweeen the kernel and user space.<br>
 * <i>native declaration : diag/include/diag_lsm_dci.h:63</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class diag_dci_reg_tbl_t extends Structure {
    public int client_id;
    public short notification_list;
    public int signal_type;

    public diag_dci_reg_tbl_t() {
        super();
    }

    public diag_dci_reg_tbl_t(int client_id, short notification_list, int signal_type) {
        super();
        this.client_id = client_id;
        this.notification_list = notification_list;
        this.signal_type = signal_type;
    }

    public diag_dci_reg_tbl_t(Pointer peer) {
        super(peer);
    }

    protected List<?> getFieldOrder() {
        return Arrays.asList("client_id", "notification_list", "signal_type");
    }

    public static class ByReference extends diag_dci_reg_tbl_t implements Structure.ByReference {

    }

    ;

    public static class ByValue extends diag_dci_reg_tbl_t implements Structure.ByValue {

    }

    ;
}
